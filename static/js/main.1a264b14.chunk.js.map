{"version":3,"sources":["Categories.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Categories","filterItems","className","onClick","Form","useState","title","setTitle","text","setText","allNotes","setAllNotes","category","setCategory","useEffect","allCategories","Set","map","allNote","console","log","style","margin","letterSpacing","newItems","filter","id","placeholder","type","name","value","onChange","e","target","rows","cols","preventDefault","note","Date","getTime","toString","alert","newList","handleRemove","charLimit","readMoreText","readLessText","readMoreClassName","readLessClassName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a264b14.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Categories = ({ filterItems }) => {\r\n  return (\r\n    <div className=\"btn-links\">\r\n      <button\r\n        className=\"btn-link\"\r\n        onClick={() => {\r\n          filterItems(\"School\");\r\n        }}\r\n      >\r\n        School\r\n      </button>\r\n      <button\r\n        className=\"btn-link\"\r\n        onClick={() => {\r\n          filterItems(\"Personal\");\r\n        }}\r\n      >\r\n        Personal\r\n      </button>\r\n      <button\r\n        className=\"btn-link\"\r\n        onClick={() => {\r\n          filterItems(\"Diary\");\r\n        }}\r\n      >\r\n        Diary\r\n      </button>\r\n      <button\r\n        className=\"btn-link\"\r\n        onClick={() => {\r\n          filterItems(\"Random\");\r\n        }}\r\n      >\r\n        Random\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Categories } from \"./Categories\";\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\n\r\nexport const Form = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [allNotes, setAllNotes] = useState([]);\r\n  const [readMore, setreadMore] = useState(false);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const filterItems = (category) => {\r\n    if (category === \"all\") {\r\n      setAllNotes(allNotes);\r\n    }\r\n    const newItems = allNotes.filter(\r\n      (allNote) => allNote.category === category\r\n    );\r\n    setAllNotes(newItems);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    let newList = allNotes.filter((allNote) => allNote.id !== id);\r\n    setAllNotes(newList);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && text) {\r\n      const note = {\r\n        id: new Date().getTime().toString(),\r\n        title,\r\n        text,\r\n        category,\r\n      };\r\n      setAllNotes((allNotes) => {\r\n        return [...allNotes, note];\r\n      });\r\n    } else {\r\n      alert(\"invalid input\");\r\n    }\r\n    setText(\"\");\r\n    setTitle(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const allCategories = [\r\n      \"all\",\r\n      ...new Set(allNotes.map((allNote) => allNote.category)),\r\n    ];\r\n    console.log(allCategories);\r\n  }, [allNotes]);\r\n\r\n  return (\r\n    <div className=\"full-form\">\r\n      <div className=\"test\">\r\n        <h1 style={{ margin: \"20px 0\", letterSpacing: \"10px\" }}>NOTES</h1>\r\n        <p>Categories</p>\r\n        <Categories filterItems={filterItems} />\r\n        <form id=\"form\">\r\n          <div id=\"div-title\">\r\n            {/* <label htmlFor=\"title\">Title : </label> */}\r\n            <input\r\n              placeholder=\"Title...\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </div>\r\n          <div id=\"div-text\">\r\n            {/* <label htmlFor=\"text\">Note : </label> */}\r\n            <textarea\r\n              placeholder=\"Enter Note Here...\"\r\n              rows=\"4\"\r\n              cols=\"40\"\r\n              type=\"text\"\r\n              name=\"text\"\r\n              id=\"text\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n          <select\r\n            type=\"text\"\r\n            name=\"category\"\r\n            id=\"category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Personal\">Personal</option>\r\n            <option value=\"School\">School</option>\r\n            <option value=\"Diary\">Diary</option>\r\n            <option value=\"Random\">Random</option>\r\n          </select>\r\n          <button className=\"btn\" onClick={handleSubmit}>\r\n            add note\r\n          </button>\r\n        </form>\r\n        <div className=\"my-notes\">\r\n          <p>My Notes</p>\r\n\r\n          {allNotes.map((allNote) => {\r\n            const { id, title, text, category } = allNote;\r\n            return (\r\n              <div key={id} className=\"notes\">\r\n                <div className=\"note-head\">\r\n                  <h1>{title}</h1>\r\n                  <button\r\n                    className=\"btn-link remove\"\r\n                    onClick={() => handleRemove(id)}\r\n                  >\r\n                    Remove Note\r\n                  </button>\r\n                </div>\r\n                <p>{category}</p>\r\n                <ReactReadMoreReadLess\r\n                  charLimit={50}\r\n                  readMoreText={\"Read more ▼\"}\r\n                  readLessText={\"Show less ▲\"}\r\n                  readMoreClassName=\"class\"\r\n                  readLessClassName=\"class\"\r\n                >\r\n                  {text}\r\n                </ReactReadMoreReadLess>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Form } from \"./Form\";\n\nfunction App() {\n  return (\n    <section className=\"app\">\n      <Form />\n      <p id=\"designer\">Designed by Efe Samuel</p>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}